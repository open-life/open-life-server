// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using open_life_server.V1.Goals;

namespace open_life_server.Migrations
{
    [DbContext(typeof(GoalsContext))]
    [Migration("20190818153559_StartDate")]
    partial class StartDate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("open_life_server.V1.Goals.HabitGoals.HabitGoal", b =>
                {
                    b.Property<int>("HabitGoalId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<DateTime>("StartDate");

                    b.Property<int>("Target");

                    b.HasKey("HabitGoalId");

                    b.ToTable("HabitGoals");
                });

            modelBuilder.Entity("open_life_server.V1.Goals.HabitGoals.HabitLog", b =>
                {
                    b.Property<int>("HabitLogId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<bool>("HabitCompleted");

                    b.Property<int>("HabitGoalId");

                    b.HasKey("HabitLogId");

                    b.HasIndex("HabitGoalId");

                    b.ToTable("HabitLogs");
                });

            modelBuilder.Entity("open_life_server.V1.Goals.ListGoals.ListGoal", b =>
                {
                    b.Property<int>("ListGoalId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ColumnName");

                    b.Property<string>("Name");

                    b.Property<int>("Target");

                    b.HasKey("ListGoalId");

                    b.ToTable("ListGoals");
                });

            modelBuilder.Entity("open_life_server.V1.Goals.ListGoals.ListItem", b =>
                {
                    b.Property<int>("ListItemId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ListGoalId");

                    b.Property<string>("Name");

                    b.Property<int>("Progress");

                    b.HasKey("ListItemId");

                    b.HasIndex("ListGoalId");

                    b.ToTable("ListItems");
                });

            modelBuilder.Entity("open_life_server.V1.Goals.NumberGoals.NumberGoal", b =>
                {
                    b.Property<int>("NumberGoalId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<int>("Target");

                    b.HasKey("NumberGoalId");

                    b.ToTable("NumberGoals");
                });

            modelBuilder.Entity("open_life_server.V1.Goals.NumberGoals.NumberLog", b =>
                {
                    b.Property<int>("NumberLogId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<DateTime>("Date");

                    b.Property<int>("NumberGoalId");

                    b.HasKey("NumberLogId");

                    b.HasIndex("NumberGoalId");

                    b.ToTable("NumberLogs");
                });

            modelBuilder.Entity("open_life_server.V1.Goals.HabitGoals.HabitLog", b =>
                {
                    b.HasOne("open_life_server.V1.Goals.HabitGoals.HabitGoal", "HabitGoal")
                        .WithMany("Logs")
                        .HasForeignKey("HabitGoalId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("open_life_server.V1.Goals.ListGoals.ListItem", b =>
                {
                    b.HasOne("open_life_server.V1.Goals.ListGoals.ListGoal", "ListGoal")
                        .WithMany("Items")
                        .HasForeignKey("ListGoalId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("open_life_server.V1.Goals.NumberGoals.NumberLog", b =>
                {
                    b.HasOne("open_life_server.V1.Goals.NumberGoals.NumberGoal", "NumberGoal")
                        .WithMany("Logs")
                        .HasForeignKey("NumberGoalId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
